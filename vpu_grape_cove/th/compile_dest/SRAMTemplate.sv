// Generated by CIRCT firtool-1.56.1
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module SRAMTemplate(
  input         clock,
                reset,
                io_r_req_valid,	// src/main/scala/utility/SRAMTemplate.scala:144:14
  input  [6:0]  io_r_req_bits_setIdx,	// src/main/scala/utility/SRAMTemplate.scala:144:14
  input         io_w_req_valid,	// src/main/scala/utility/SRAMTemplate.scala:144:14
  input  [6:0]  io_w_req_bits_setIdx,	// src/main/scala/utility/SRAMTemplate.scala:144:14
  input  [27:0] io_w_req_bits_data_0,	// src/main/scala/utility/SRAMTemplate.scala:144:14
                io_w_req_bits_data_1,	// src/main/scala/utility/SRAMTemplate.scala:144:14
                io_w_req_bits_data_2,	// src/main/scala/utility/SRAMTemplate.scala:144:14
                io_w_req_bits_data_3,	// src/main/scala/utility/SRAMTemplate.scala:144:14
  input  [3:0]  io_w_req_bits_waymask,	// src/main/scala/utility/SRAMTemplate.scala:144:14
  output [27:0] io_r_resp_data_0,	// src/main/scala/utility/SRAMTemplate.scala:144:14
                io_r_resp_data_1,	// src/main/scala/utility/SRAMTemplate.scala:144:14
                io_r_resp_data_2,	// src/main/scala/utility/SRAMTemplate.scala:144:14
                io_r_resp_data_3	// src/main/scala/utility/SRAMTemplate.scala:144:14
);

  wire [111:0] _array_ext_R0_data;	// src/main/scala/utility/SRAMTemplate.scala:154:26
  wire         wen = io_w_req_valid;	// src/main/scala/utility/SRAMTemplate.scala:171:52
  wire [6:0]   setIdx = io_w_req_bits_setIdx;	// src/main/scala/utility/SRAMTemplate.scala:174:19
  wire [3:0]   waymask = io_w_req_bits_waymask;	// src/main/scala/utility/SRAMTemplate.scala:180:22
  wire         resetState = 1'h0;	// src/main/scala/utility/SRAMTemplate.scala:155:{41,60}
  wire         resetSet = 1'h0;	// src/main/scala/utility/SRAMTemplate.scala:155:{41,60}
  wire [27:0]  wdata_0;	// src/main/scala/utility/SRAMTemplate.scala:176:13
  wire [27:0]  wdata_1;	// src/main/scala/utility/SRAMTemplate.scala:176:13
  wire [27:0]  wdata_2;	// src/main/scala/utility/SRAMTemplate.scala:176:13
  wire [27:0]  wdata_3;	// src/main/scala/utility/SRAMTemplate.scala:176:13
  wire [55:0]  wdata_lo = {io_w_req_bits_data_1, io_w_req_bits_data_0};	// src/main/scala/utility/SRAMTemplate.scala:176:13
  wire [55:0]  wdata_hi = {io_w_req_bits_data_3, io_w_req_bits_data_2};	// src/main/scala/utility/SRAMTemplate.scala:176:13
  assign wdata_0 = wdata_lo[27:0];	// src/main/scala/utility/SRAMTemplate.scala:176:13
  assign wdata_1 = wdata_lo[55:28];	// src/main/scala/utility/SRAMTemplate.scala:176:13
  assign wdata_2 = wdata_hi[27:0];	// src/main/scala/utility/SRAMTemplate.scala:176:13
  assign wdata_3 = wdata_hi[55:28];	// src/main/scala/utility/SRAMTemplate.scala:176:13
  wire [55:0]  raw_rdata_lo = _array_ext_R0_data[55:0];	// src/main/scala/utility/SRAMTemplate.scala:154:26, :192:69
  wire [55:0]  raw_rdata_hi = _array_ext_R0_data[111:56];	// src/main/scala/utility/SRAMTemplate.scala:154:26, :192:69
  wire [27:0]  raw_rdata_0 = raw_rdata_lo[27:0];	// src/main/scala/utility/SRAMTemplate.scala:192:69
  wire [27:0]  raw_rdata_1 = raw_rdata_lo[55:28];	// src/main/scala/utility/SRAMTemplate.scala:192:69
  wire [27:0]  raw_rdata_2 = raw_rdata_hi[27:0];	// src/main/scala/utility/SRAMTemplate.scala:192:69
  wire [27:0]  raw_rdata_3 = raw_rdata_hi[55:28];	// src/main/scala/utility/SRAMTemplate.scala:192:69
  reg  [63:0]  bypass_wdata_lfsr;	// src/main/scala/utility/LFSR64.scala:27:33
  wire         bypass_wdata_xor =
    bypass_wdata_lfsr[0] ^ bypass_wdata_lfsr[1] ^ bypass_wdata_lfsr[3]
    ^ bypass_wdata_lfsr[4];	// src/main/scala/utility/LFSR64.scala:27:33, :29:{19,29,39,43,49}
  wire [27:0]  bypass_wdata_0 = bypass_wdata_lfsr[27:0];	// src/main/scala/utility/LFSR64.scala:27:33, src/main/scala/utility/SRAMTemplate.scala:208:{17,58}
  reg  [63:0]  bypass_wdata_lfsr_1;	// src/main/scala/utility/LFSR64.scala:27:33
  wire         bypass_wdata_xor_1 =
    bypass_wdata_lfsr_1[0] ^ bypass_wdata_lfsr_1[1] ^ bypass_wdata_lfsr_1[3]
    ^ bypass_wdata_lfsr_1[4];	// src/main/scala/utility/LFSR64.scala:27:33, :29:{19,29,39,43,49}
  wire [27:0]  bypass_wdata_1 = bypass_wdata_lfsr_1[27:0];	// src/main/scala/utility/LFSR64.scala:27:33, src/main/scala/utility/SRAMTemplate.scala:208:{17,58}
  reg  [63:0]  bypass_wdata_lfsr_2;	// src/main/scala/utility/LFSR64.scala:27:33
  wire         bypass_wdata_xor_2 =
    bypass_wdata_lfsr_2[0] ^ bypass_wdata_lfsr_2[1] ^ bypass_wdata_lfsr_2[3]
    ^ bypass_wdata_lfsr_2[4];	// src/main/scala/utility/LFSR64.scala:27:33, :29:{19,29,39,43,49}
  wire [27:0]  bypass_wdata_2 = bypass_wdata_lfsr_2[27:0];	// src/main/scala/utility/LFSR64.scala:27:33, src/main/scala/utility/SRAMTemplate.scala:208:{17,58}
  reg  [63:0]  bypass_wdata_lfsr_3;	// src/main/scala/utility/LFSR64.scala:27:33
  wire         bypass_wdata_xor_3 =
    bypass_wdata_lfsr_3[0] ^ bypass_wdata_lfsr_3[1] ^ bypass_wdata_lfsr_3[3]
    ^ bypass_wdata_lfsr_3[4];	// src/main/scala/utility/LFSR64.scala:27:33, :29:{19,29,39,43,49}
  wire [27:0]  bypass_wdata_3 = bypass_wdata_lfsr_3[27:0];	// src/main/scala/utility/LFSR64.scala:27:33, src/main/scala/utility/SRAMTemplate.scala:208:{17,58}
  wire         bypass_mask_need_check = io_r_req_valid & io_w_req_valid;	// src/main/scala/utility/SRAMTemplate.scala:198:26
  reg          bypass_mask_need_check_reg_last_REG;	// src/main/scala/utility/ClockGatedReg.scala:30:20
  wire         bypass_mask_need_check_reg = bypass_mask_need_check_reg_last_REG;	// src/main/scala/utility/ClockGatedReg.scala:29:24, :30:20
  reg  [6:0]   bypass_mask_waddr_reg;	// src/main/scala/utility/SRAMTemplate.scala:200:30
  reg  [6:0]   bypass_mask_raddr_reg;	// src/main/scala/utility/SRAMTemplate.scala:201:30
  reg  [3:0]   bypass_mask_wmask_reg;	// src/main/scala/utility/SRAMTemplate.scala:202:30
  wire [3:0]   bypass_mask_bypass =
    {4{bypass_mask_need_check_reg & bypass_mask_waddr_reg == bypass_mask_raddr_reg}}
    & bypass_mask_wmask_reg;	// src/main/scala/utility/ClockGatedReg.scala:29:24, src/main/scala/utility/SRAMTemplate.scala:200:30, :201:30, :202:30, :204:{22,43,56,71}
  wire [3:0]   bypass_mask = bypass_mask_bypass;	// src/main/scala/utility/SRAMTemplate.scala:204:71, :205:20
  wire [27:0]  mem_rdata_0 = bypass_mask[0] ? bypass_wdata_0 : raw_rdata_0;	// src/main/scala/utility/SRAMTemplate.scala:192:69, :205:20, :208:17, :212:{17,30}, :213:30
  wire [27:0]  mem_rdata_1 = bypass_mask[1] ? bypass_wdata_1 : raw_rdata_1;	// src/main/scala/utility/SRAMTemplate.scala:192:69, :205:20, :208:17, :212:{17,30}, :213:30
  wire [27:0]  mem_rdata_2 = bypass_mask[2] ? bypass_wdata_2 : raw_rdata_2;	// src/main/scala/utility/SRAMTemplate.scala:192:69, :205:20, :208:17, :212:{17,30}, :213:30
  wire [27:0]  mem_rdata_3 = bypass_mask[3] ? bypass_wdata_3 : raw_rdata_3;	// src/main/scala/utility/SRAMTemplate.scala:192:69, :205:20, :208:17, :212:{17,30}, :213:30
  wire [27:0]  rdata_0 = mem_rdata_0;	// src/main/scala/utility/SRAMTemplate.scala:212:17, :219:45
  wire [27:0]  rdata_1 = mem_rdata_1;	// src/main/scala/utility/SRAMTemplate.scala:212:17, :219:45
  wire [27:0]  rdata_2 = mem_rdata_2;	// src/main/scala/utility/SRAMTemplate.scala:212:17, :219:45
  wire [27:0]  rdata_3 = mem_rdata_3;	// src/main/scala/utility/SRAMTemplate.scala:212:17, :219:45
  always @(posedge clock) begin
    if (reset) begin
      bypass_wdata_lfsr <= 64'h1234567887654321;	// src/main/scala/utility/LFSR64.scala:27:33
      bypass_wdata_lfsr_1 <= 64'h1234567887654321;	// src/main/scala/utility/LFSR64.scala:27:33
      bypass_wdata_lfsr_2 <= 64'h1234567887654321;	// src/main/scala/utility/LFSR64.scala:27:33
      bypass_wdata_lfsr_3 <= 64'h1234567887654321;	// src/main/scala/utility/LFSR64.scala:27:33
      bypass_mask_need_check_reg_last_REG <= 1'h0;	// src/main/scala/utility/ClockGatedReg.scala:30:20, src/main/scala/utility/SRAMTemplate.scala:155:{41,60}
    end
    else begin
      if (bypass_wdata_lfsr == 64'h0)	// src/main/scala/utility/LFSR64.scala:27:33, :31:24
        bypass_wdata_lfsr <= 64'h1;	// src/main/scala/utility/LFSR64.scala:27:33, :31:18
      else	// src/main/scala/utility/LFSR64.scala:31:24
        bypass_wdata_lfsr <= {bypass_wdata_xor, bypass_wdata_lfsr[63:1]};	// src/main/scala/utility/LFSR64.scala:27:33, :29:43, :31:{41,51}
      if (bypass_wdata_lfsr_1 == 64'h0)	// src/main/scala/utility/LFSR64.scala:27:33, :31:24
        bypass_wdata_lfsr_1 <= 64'h1;	// src/main/scala/utility/LFSR64.scala:27:33, :31:18
      else	// src/main/scala/utility/LFSR64.scala:31:24
        bypass_wdata_lfsr_1 <= {bypass_wdata_xor_1, bypass_wdata_lfsr_1[63:1]};	// src/main/scala/utility/LFSR64.scala:27:33, :29:43, :31:{41,51}
      if (bypass_wdata_lfsr_2 == 64'h0)	// src/main/scala/utility/LFSR64.scala:27:33, :31:24
        bypass_wdata_lfsr_2 <= 64'h1;	// src/main/scala/utility/LFSR64.scala:27:33, :31:18
      else	// src/main/scala/utility/LFSR64.scala:31:24
        bypass_wdata_lfsr_2 <= {bypass_wdata_xor_2, bypass_wdata_lfsr_2[63:1]};	// src/main/scala/utility/LFSR64.scala:27:33, :29:43, :31:{41,51}
      if (bypass_wdata_lfsr_3 == 64'h0)	// src/main/scala/utility/LFSR64.scala:27:33, :31:24
        bypass_wdata_lfsr_3 <= 64'h1;	// src/main/scala/utility/LFSR64.scala:27:33, :31:18
      else	// src/main/scala/utility/LFSR64.scala:31:24
        bypass_wdata_lfsr_3 <= {bypass_wdata_xor_3, bypass_wdata_lfsr_3[63:1]};	// src/main/scala/utility/LFSR64.scala:27:33, :29:43, :31:{41,51}
      bypass_mask_need_check_reg_last_REG <= bypass_mask_need_check;	// src/main/scala/utility/ClockGatedReg.scala:30:20, src/main/scala/utility/SRAMTemplate.scala:198:26
    end
    if (bypass_mask_need_check) begin	// src/main/scala/utility/SRAMTemplate.scala:198:26
      bypass_mask_waddr_reg <= io_w_req_bits_setIdx;	// src/main/scala/utility/SRAMTemplate.scala:200:30
      bypass_mask_raddr_reg <= io_r_req_bits_setIdx;	// src/main/scala/utility/SRAMTemplate.scala:201:30
      bypass_mask_wmask_reg <= io_w_req_bits_waymask;	// src/main/scala/utility/SRAMTemplate.scala:202:30
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin
      automatic logic [31:0] _RANDOM[0:8];
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [3:0] i = 4'h0; i < 4'h9; i += 4'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        bypass_wdata_lfsr = {_RANDOM[4'h0], _RANDOM[4'h1]};	// src/main/scala/utility/LFSR64.scala:27:33
        bypass_wdata_lfsr_1 = {_RANDOM[4'h2], _RANDOM[4'h3]};	// src/main/scala/utility/LFSR64.scala:27:33
        bypass_wdata_lfsr_2 = {_RANDOM[4'h4], _RANDOM[4'h5]};	// src/main/scala/utility/LFSR64.scala:27:33
        bypass_wdata_lfsr_3 = {_RANDOM[4'h6], _RANDOM[4'h7]};	// src/main/scala/utility/LFSR64.scala:27:33
        bypass_mask_need_check_reg_last_REG = _RANDOM[4'h8][0];	// src/main/scala/utility/ClockGatedReg.scala:30:20
        bypass_mask_waddr_reg = _RANDOM[4'h8][7:1];	// src/main/scala/utility/ClockGatedReg.scala:30:20, src/main/scala/utility/SRAMTemplate.scala:200:30
        bypass_mask_raddr_reg = _RANDOM[4'h8][14:8];	// src/main/scala/utility/ClockGatedReg.scala:30:20, src/main/scala/utility/SRAMTemplate.scala:201:30
        bypass_mask_wmask_reg = _RANDOM[4'h8][18:15];	// src/main/scala/utility/ClockGatedReg.scala:30:20, src/main/scala/utility/SRAMTemplate.scala:202:30
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  array_128x112 array_ext (	// src/main/scala/utility/SRAMTemplate.scala:154:26
    .R0_addr (io_r_req_bits_setIdx),
    .R0_en   (io_r_req_valid),
    .R0_clk  (clock),
    .W0_addr (setIdx),	// src/main/scala/utility/SRAMTemplate.scala:174:19
    .W0_en   (wen),	// src/main/scala/utility/SRAMTemplate.scala:171:52
    .W0_clk  (clock),
    .W0_data ({wdata_3, wdata_2, wdata_1, wdata_0}),	// src/main/scala/utility/SRAMTemplate.scala:154:26, :176:13
    .W0_mask (waymask),	// src/main/scala/utility/SRAMTemplate.scala:180:22
    .R0_data (_array_ext_R0_data)
  );
  assign io_r_resp_data_0 = rdata_0;	// src/main/scala/utility/SRAMTemplate.scala:219:45
  assign io_r_resp_data_1 = rdata_1;	// src/main/scala/utility/SRAMTemplate.scala:219:45
  assign io_r_resp_data_2 = rdata_2;	// src/main/scala/utility/SRAMTemplate.scala:219:45
  assign io_r_resp_data_3 = rdata_3;	// src/main/scala/utility/SRAMTemplate.scala:219:45
endmodule

