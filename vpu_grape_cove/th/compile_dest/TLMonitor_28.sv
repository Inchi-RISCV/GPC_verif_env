// Generated by CIRCT firtool-1.56.1
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module TLMonitor_28(
  input        clock,
               reset,
               io_in_a_ready,	// src/main/scala/tilelink/Monitor.scala:17:14
               io_in_a_valid,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [2:0]  io_in_a_bits_opcode,	// src/main/scala/tilelink/Monitor.scala:17:14
               io_in_a_bits_param,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [1:0]  io_in_a_bits_size,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [10:0] io_in_a_bits_source,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [27:0] io_in_a_bits_address,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [7:0]  io_in_a_bits_mask,	// src/main/scala/tilelink/Monitor.scala:17:14
  input        io_in_a_bits_corrupt,	// src/main/scala/tilelink/Monitor.scala:17:14
               io_in_d_ready,	// src/main/scala/tilelink/Monitor.scala:17:14
               io_in_d_valid,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [2:0]  io_in_d_bits_opcode,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [1:0]  io_in_d_bits_size,	// src/main/scala/tilelink/Monitor.scala:17:14
  input [10:0] io_in_d_bits_source	// src/main/scala/tilelink/Monitor.scala:17:14
);

  wire [31:0]    _plusarg_reader_1_out;	// src/main/scala/util/PlusArg.scala:80:11
  wire [31:0]    _plusarg_reader_out;	// src/main/scala/util/PlusArg.scala:80:11
  wire [10:0]    source_ok_uncommonBits = io_in_a_bits_source;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [1:0]     mask_sizeOH_shiftAmount = io_in_a_bits_size;	// src/main/scala/chisel3/util/OneHot.scala:64:49
  wire [10:0]    uncommonBits = io_in_a_bits_source;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [10:0]    uncommonBits_1 = io_in_a_bits_source;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [10:0]    uncommonBits_2 = io_in_a_bits_source;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [10:0]    uncommonBits_3 = io_in_a_bits_source;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [10:0]    uncommonBits_4 = io_in_a_bits_source;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [10:0]    uncommonBits_5 = io_in_a_bits_source;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [10:0]    uncommonBits_6 = io_in_a_bits_source;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [10:0]    uncommonBits_7 = io_in_a_bits_source;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [10:0]    uncommonBits_8 = io_in_a_bits_source;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire [10:0]    source_ok_uncommonBits_1 = io_in_d_bits_source;	// src/main/scala/diplomacy/Parameters.scala:52:56
  wire           sink_ok = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           a_first_beats1_decode = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           a_first_beats1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           a_first_count = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           d_first_beats1_decode = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           d_first_beats1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           d_first_count = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           a_first_beats1_decode_1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           a_first_beats1_1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           a_first_count_1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           d_first_beats1_decode_1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           d_first_beats1_1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           d_first_count_1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           c_first_beats1_decode = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           c_first_beats1_opdata = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           c_first_beats1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           c_first_done = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           c_first_count = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           d_first_beats1_decode_2 = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           d_first_beats1_2 = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           d_first_count_2 = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           c_probe_ack = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           same_cycle_resp_1 = 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
  wire           a_first_last = 1'h1;	// src/main/scala/tilelink/Bundles.scala:105:26, src/main/scala/tilelink/Edges.scala:233:33, src/main/scala/tilelink/Monitor.scala:49:11, :323:28, :333:28, :334:30, :350:30, :794:30
  wire           d_first_last = 1'h1;	// src/main/scala/tilelink/Bundles.scala:105:26, src/main/scala/tilelink/Edges.scala:233:33, src/main/scala/tilelink/Monitor.scala:49:11, :323:28, :333:28, :334:30, :350:30, :794:30
  wire           a_first_last_1 = 1'h1;	// src/main/scala/tilelink/Bundles.scala:105:26, src/main/scala/tilelink/Edges.scala:233:33, src/main/scala/tilelink/Monitor.scala:49:11, :323:28, :333:28, :334:30, :350:30, :794:30
  wire           d_first_last_1 = 1'h1;	// src/main/scala/tilelink/Bundles.scala:105:26, src/main/scala/tilelink/Edges.scala:233:33, src/main/scala/tilelink/Monitor.scala:49:11, :323:28, :333:28, :334:30, :350:30, :794:30
  wire           c_first_counter1 = 1'h1;	// src/main/scala/tilelink/Bundles.scala:105:26, src/main/scala/tilelink/Edges.scala:231:28, :233:33, src/main/scala/tilelink/Monitor.scala:49:11, :323:28, :333:28, :334:30, :350:30, :794:30
  wire           c_first = 1'h1;	// src/main/scala/tilelink/Bundles.scala:105:26, src/main/scala/tilelink/Edges.scala:232:25, :233:33, src/main/scala/tilelink/Monitor.scala:49:11, :323:28, :333:28, :334:30, :350:30, :794:30
  wire           c_first_last = 1'h1;	// src/main/scala/tilelink/Bundles.scala:105:26, src/main/scala/tilelink/Edges.scala:233:33, src/main/scala/tilelink/Monitor.scala:49:11, :323:28, :333:28, :334:30, :350:30, :794:30
  wire           d_first_last_2 = 1'h1;	// src/main/scala/tilelink/Bundles.scala:105:26, src/main/scala/tilelink/Edges.scala:233:33, src/main/scala/tilelink/Monitor.scala:49:11, :323:28, :333:28, :334:30, :350:30, :794:30
  wire [2:0]     responseMap_5 = 3'h2;	// src/main/scala/tilelink/Monitor.scala:640:42, :641:42
  wire [2:0]     responseMapSecondOption_5 = 3'h2;	// src/main/scala/tilelink/Monitor.scala:640:42, :641:42
  wire [2:0]     responseMap_6 = 3'h4;	// src/main/scala/tilelink/Monitor.scala:640:42, :641:42
  wire [2:0]     responseMap_7 = 3'h4;	// src/main/scala/tilelink/Monitor.scala:640:42, :641:42
  wire [2:0]     responseMapSecondOption_7 = 3'h4;	// src/main/scala/tilelink/Monitor.scala:640:42, :641:42
  wire [2:0]     responseMapSecondOption_6 = 3'h5;	// src/main/scala/tilelink/Monitor.scala:641:42
  wire [2:0]     responseMap_0 = 3'h0;	// src/main/scala/tilelink/Monitor.scala:640:42, :641:42, :752:40
  wire [2:0]     responseMap_1 = 3'h0;	// src/main/scala/tilelink/Monitor.scala:640:42, :641:42, :752:40
  wire [2:0]     responseMapSecondOption_0 = 3'h0;	// src/main/scala/tilelink/Monitor.scala:640:42, :641:42, :752:40
  wire [2:0]     responseMapSecondOption_1 = 3'h0;	// src/main/scala/tilelink/Monitor.scala:640:42, :641:42, :752:40
  wire [2:0]     c_sizes_set_interm = 3'h0;	// src/main/scala/tilelink/Monitor.scala:640:42, :641:42, :752:40
  wire [5119:0]  c_opcodes_set = 5120'h0;	// src/main/scala/tilelink/Monitor.scala:737:34, :738:34
  wire [5119:0]  c_sizes_set = 5120'h0;	// src/main/scala/tilelink/Monitor.scala:737:34, :738:34
  wire [1279:0]  c_set = 1280'h0;	// src/main/scala/tilelink/Monitor.scala:735:34, :736:34
  wire [1279:0]  c_set_wo_ready = 1280'h0;	// src/main/scala/tilelink/Monitor.scala:735:34, :736:34
  wire [2:0]     responseMap_2 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:640:42, :641:42
  wire [2:0]     responseMap_3 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:640:42, :641:42
  wire [2:0]     responseMap_4 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:640:42, :641:42
  wire [2:0]     responseMapSecondOption_2 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:640:42, :641:42
  wire [2:0]     responseMapSecondOption_3 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:640:42, :641:42
  wire [2:0]     responseMapSecondOption_4 = 3'h1;	// src/main/scala/tilelink/Monitor.scala:640:42, :641:42
  wire [3:0]     c_opcodes_set_interm = 4'h0;	// src/main/scala/tilelink/Monitor.scala:632:35, :751:40
  wire [5:0]     _is_aligned_mask_T_1 = 6'h7 << io_in_a_bits_size;	// src/main/scala/util/package.scala:235:71
  wire [2:0]     is_aligned_mask = ~(_is_aligned_mask_T_1[2:0]);	// src/main/scala/util/package.scala:235:{46,71,76}
  wire           is_aligned = (io_in_a_bits_address[2:0] & is_aligned_mask) == 3'h0;	// src/main/scala/tilelink/Edges.scala:22:{16,24}, src/main/scala/tilelink/Monitor.scala:640:42, :641:42, :752:40, src/main/scala/util/package.scala:235:46
  wire [3:0]     _mask_sizeOH_T_1 = 4'h1 << mask_sizeOH_shiftAmount;	// src/main/scala/chisel3/util/OneHot.scala:64:49, :65:12
  wire [2:0]     mask_sizeOH = {_mask_sizeOH_T_1[2:1], 1'h1};	// src/main/scala/chisel3/util/OneHot.scala:65:{12,27}, src/main/scala/tilelink/Bundles.scala:105:26, src/main/scala/tilelink/Edges.scala:233:33, src/main/scala/tilelink/Monitor.scala:49:11, :323:28, :333:28, :334:30, :350:30, :794:30, src/main/scala/util/Misc.scala:202:81
  wire           mask_size = mask_sizeOH[2];	// src/main/scala/util/Misc.scala:202:81, :209:26
  wire           mask_bit = io_in_a_bits_address[2];	// src/main/scala/util/Misc.scala:210:26
  wire           mask_eq_1 = mask_bit;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire           mask_nbit = ~mask_bit;	// src/main/scala/util/Misc.scala:210:26, :211:20
  wire           mask_eq = mask_nbit;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire           mask_acc = (&io_in_a_bits_size) | mask_size & mask_eq;	// src/main/scala/util/Misc.scala:206:21, :209:26, :214:27, :215:{29,38}
  wire           mask_acc_1 = (&io_in_a_bits_size) | mask_size & mask_eq_1;	// src/main/scala/util/Misc.scala:206:21, :209:26, :214:27, :215:{29,38}
  wire           mask_size_1 = mask_sizeOH[1];	// src/main/scala/util/Misc.scala:202:81, :209:26
  wire           mask_bit_1 = io_in_a_bits_address[1];	// src/main/scala/util/Misc.scala:210:26
  wire           mask_nbit_1 = ~mask_bit_1;	// src/main/scala/util/Misc.scala:210:26, :211:20
  wire           mask_eq_2 = mask_eq & mask_nbit_1;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire           mask_acc_2 = mask_acc | mask_size_1 & mask_eq_2;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire           mask_eq_3 = mask_eq & mask_bit_1;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire           mask_acc_3 = mask_acc | mask_size_1 & mask_eq_3;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire           mask_eq_4 = mask_eq_1 & mask_nbit_1;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire           mask_acc_4 = mask_acc_1 | mask_size_1 & mask_eq_4;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire           mask_eq_5 = mask_eq_1 & mask_bit_1;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire           mask_acc_5 = mask_acc_1 | mask_size_1 & mask_eq_5;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire           mask_size_2 = mask_sizeOH[0];	// src/main/scala/util/Misc.scala:202:81, :209:26
  wire           mask_bit_2 = io_in_a_bits_address[0];	// src/main/scala/util/Misc.scala:210:26
  wire           mask_nbit_2 = ~mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :211:20
  wire           mask_eq_6 = mask_eq_2 & mask_nbit_2;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire           mask_acc_6 = mask_acc_2 | mask_size_2 & mask_eq_6;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire           mask_eq_7 = mask_eq_2 & mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire           mask_acc_7 = mask_acc_2 | mask_size_2 & mask_eq_7;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire           mask_eq_8 = mask_eq_3 & mask_nbit_2;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire           mask_acc_8 = mask_acc_3 | mask_size_2 & mask_eq_8;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire           mask_eq_9 = mask_eq_3 & mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire           mask_acc_9 = mask_acc_3 | mask_size_2 & mask_eq_9;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire           mask_eq_10 = mask_eq_4 & mask_nbit_2;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire           mask_acc_10 = mask_acc_4 | mask_size_2 & mask_eq_10;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire           mask_eq_11 = mask_eq_4 & mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire           mask_acc_11 = mask_acc_4 | mask_size_2 & mask_eq_11;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire           mask_eq_12 = mask_eq_5 & mask_nbit_2;	// src/main/scala/util/Misc.scala:211:20, :214:27
  wire           mask_acc_12 = mask_acc_5 | mask_size_2 & mask_eq_12;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire           mask_eq_13 = mask_eq_5 & mask_bit_2;	// src/main/scala/util/Misc.scala:210:26, :214:27
  wire           mask_acc_13 = mask_acc_5 | mask_size_2 & mask_eq_13;	// src/main/scala/util/Misc.scala:209:26, :214:27, :215:{29,38}
  wire [1:0]     mask_lo_lo = {mask_acc_7, mask_acc_6};	// src/main/scala/util/Misc.scala:215:29, :222:10
  wire [1:0]     mask_lo_hi = {mask_acc_9, mask_acc_8};	// src/main/scala/util/Misc.scala:215:29, :222:10
  wire [3:0]     mask_lo = {mask_lo_hi, mask_lo_lo};	// src/main/scala/util/Misc.scala:222:10
  wire [1:0]     mask_hi_lo = {mask_acc_11, mask_acc_10};	// src/main/scala/util/Misc.scala:215:29, :222:10
  wire [1:0]     mask_hi_hi = {mask_acc_13, mask_acc_12};	// src/main/scala/util/Misc.scala:215:29, :222:10
  wire [3:0]     mask_hi = {mask_hi_hi, mask_hi_lo};	// src/main/scala/util/Misc.scala:222:10
  wire [7:0]     mask = {mask_hi, mask_lo};	// src/main/scala/util/Misc.scala:222:10
  wire           _GEN = io_in_d_bits_opcode == 3'h6;	// src/main/scala/tilelink/Monitor.scala:81:25, :310:25
  wire           d_release_ack;	// src/main/scala/tilelink/Monitor.scala:670:46
  assign d_release_ack = _GEN;	// src/main/scala/tilelink/Monitor.scala:310:25, :670:46
  wire           d_release_ack_1;	// src/main/scala/tilelink/Monitor.scala:780:46
  assign d_release_ack_1 = _GEN;	// src/main/scala/tilelink/Monitor.scala:310:25, :780:46
  wire           _a_first_T_1 = io_in_a_ready & io_in_a_valid;	// src/main/scala/chisel3/util/Decoupled.scala:52:35
  wire           a_first_done;	// src/main/scala/tilelink/Edges.scala:234:22
  assign a_first_done = _a_first_T_1;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:234:22
  wire           a_first_done_1;	// src/main/scala/tilelink/Edges.scala:234:22
  assign a_first_done_1 = _a_first_T_1;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:234:22
  wire           a_first_beats1_opdata = ~(io_in_a_bits_opcode[2]);	// src/main/scala/tilelink/Edges.scala:93:{28,37}
  reg            a_first_counter;	// src/main/scala/tilelink/Edges.scala:230:27
  wire           a_first_counter1 = a_first_counter - 1'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire           a_first = ~a_first_counter;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  reg  [2:0]     opcode;	// src/main/scala/tilelink/Monitor.scala:384:22
  reg  [2:0]     param;	// src/main/scala/tilelink/Monitor.scala:385:22
  reg  [1:0]     size;	// src/main/scala/tilelink/Monitor.scala:386:22
  reg  [10:0]    source;	// src/main/scala/tilelink/Monitor.scala:387:22
  reg  [27:0]    address;	// src/main/scala/tilelink/Monitor.scala:388:22
  wire           _d_first_T_2 = io_in_d_ready & io_in_d_valid;	// src/main/scala/chisel3/util/Decoupled.scala:52:35
  wire           d_first_done;	// src/main/scala/tilelink/Edges.scala:234:22
  assign d_first_done = _d_first_T_2;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:234:22
  wire           d_first_done_1;	// src/main/scala/tilelink/Edges.scala:234:22
  assign d_first_done_1 = _d_first_T_2;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:234:22
  wire           d_first_done_2;	// src/main/scala/tilelink/Edges.scala:234:22
  assign d_first_done_2 = _d_first_T_2;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:234:22
  wire           d_first_beats1_opdata = io_in_d_bits_opcode[0];	// src/main/scala/tilelink/Edges.scala:107:36
  wire           d_first_beats1_opdata_1 = io_in_d_bits_opcode[0];	// src/main/scala/tilelink/Edges.scala:107:36
  wire           d_first_beats1_opdata_2 = io_in_d_bits_opcode[0];	// src/main/scala/tilelink/Edges.scala:107:36
  reg            d_first_counter;	// src/main/scala/tilelink/Edges.scala:230:27
  wire           d_first_counter1 = d_first_counter - 1'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire           d_first = ~d_first_counter;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  reg  [2:0]     opcode_1;	// src/main/scala/tilelink/Monitor.scala:535:22
  reg  [1:0]     size_1;	// src/main/scala/tilelink/Monitor.scala:537:22
  reg  [10:0]    source_1;	// src/main/scala/tilelink/Monitor.scala:538:22
  reg  [1279:0]  inflight;	// src/main/scala/tilelink/Monitor.scala:611:27
  reg  [5119:0]  inflight_opcodes;	// src/main/scala/tilelink/Monitor.scala:613:35
  reg  [5119:0]  inflight_sizes;	// src/main/scala/tilelink/Monitor.scala:615:33
  wire           a_first_beats1_opdata_1 = ~(io_in_a_bits_opcode[2]);	// src/main/scala/tilelink/Edges.scala:93:{28,37}
  reg            a_first_counter_1;	// src/main/scala/tilelink/Edges.scala:230:27
  wire           a_first_counter1_1 = a_first_counter_1 - 1'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire           a_first_1 = ~a_first_counter_1;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  reg            d_first_counter_1;	// src/main/scala/tilelink/Edges.scala:230:27
  wire           d_first_counter1_1 = d_first_counter_1 - 1'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire           d_first_1 = ~d_first_counter_1;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  wire [5119:0]  _GEN_0 = {5107'h0, io_in_d_bits_source, 2'h0};	// src/main/scala/chisel3/util/OneHot.scala:65:12, src/main/scala/tilelink/Monitor.scala:634:44
  wire [5119:0]  _a_opcode_lookup_T_1 = inflight_opcodes >> _GEN_0;	// src/main/scala/tilelink/Monitor.scala:613:35, :634:44
  wire [3:0]     a_opcode_lookup = {1'h0, _a_opcode_lookup_T_1[3:1]};	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :42:11, :49:11, :306:31, :632:35, :634:{21,44,152}, :769:71, :792:88
  wire [5119:0]  _a_size_lookup_T_1 = inflight_sizes >> _GEN_0;	// src/main/scala/tilelink/Monitor.scala:615:33, :634:44, :638:40
  wire [3:0]     a_size_lookup = {1'h0, _a_size_lookup_T_1[3:1]};	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :42:11, :49:11, :306:31, :636:33, :638:{19,40,144}, :769:71, :792:88
  wire           _same_cycle_resp_T_1 = io_in_a_valid & a_first_1;	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:648:26
  wire [2047:0]  _GEN_1 = {2037'h0, io_in_a_bits_source};	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [2047:0]  _a_set_wo_ready_T = 2048'h1 << _GEN_1;	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [1279:0]  a_set_wo_ready =
    _same_cycle_resp_T_1 ? _a_set_wo_ready_T[1279:0] : 1280'h0;	// src/main/scala/chisel3/util/OneHot.scala:58:35, src/main/scala/tilelink/Monitor.scala:624:34, :648:{26,71}, :649:22, :735:34, :736:34
  wire           _GEN_2 = _a_first_T_1 & a_first_1;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:652:25
  wire [2047:0]  _a_set_T = 2048'h1 << _GEN_1;	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [1279:0]  a_set = _GEN_2 ? _a_set_T[1279:0] : 1280'h0;	// src/main/scala/chisel3/util/OneHot.scala:58:35, src/main/scala/tilelink/Monitor.scala:623:34, :652:{25,70}, :653:28, :735:34, :736:34
  wire [3:0]     a_opcodes_set_interm = _GEN_2 ? {io_in_a_bits_opcode, 1'h1} : 4'h0;	// src/main/scala/tilelink/Bundles.scala:105:26, src/main/scala/tilelink/Edges.scala:233:33, src/main/scala/tilelink/Monitor.scala:49:11, :323:28, :333:28, :334:30, :350:30, :632:35, :643:40, :652:{25,70}, :654:{28,61}, :794:30
  wire [2:0]     a_sizes_set_interm = _GEN_2 ? {io_in_a_bits_size, 1'h1} : 3'h0;	// src/main/scala/tilelink/Bundles.scala:105:26, src/main/scala/tilelink/Edges.scala:233:33, src/main/scala/tilelink/Monitor.scala:49:11, :323:28, :333:28, :334:30, :350:30, :640:42, :641:42, :645:38, :652:{25,70}, :655:{28,59}, :752:40, :794:30
  wire [16386:0] _a_opcodes_set_T_1 =
    {16383'h0, a_opcodes_set_interm} << {16374'h0, io_in_a_bits_source, 2'h0};	// src/main/scala/chisel3/util/OneHot.scala:65:12, src/main/scala/tilelink/Monitor.scala:643:40, :656:54
  wire [5119:0]  a_opcodes_set = _GEN_2 ? _a_opcodes_set_T_1[5119:0] : 5120'h0;	// src/main/scala/tilelink/Monitor.scala:627:33, :652:{25,70}, :656:{28,54}, :737:34, :738:34
  wire [16385:0] _a_sizes_set_T_1 =
    {16383'h0, a_sizes_set_interm} << {16373'h0, io_in_a_bits_source, 2'h0};	// src/main/scala/chisel3/util/OneHot.scala:65:12, src/main/scala/tilelink/Monitor.scala:645:38, :656:54, :657:52
  wire [5119:0]  a_sizes_set = _GEN_2 ? _a_sizes_set_T_1[5119:0] : 5120'h0;	// src/main/scala/tilelink/Monitor.scala:629:31, :652:{25,70}, :657:{28,52}, :737:34, :738:34
  wire           _GEN_3 = io_in_d_valid & d_first_1;	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:671:26
  wire           _GEN_4 = _GEN_3 & ~d_release_ack;	// src/main/scala/tilelink/Monitor.scala:670:46, :671:{26,71,74}
  wire [2047:0]  _GEN_5 = {2037'h0, io_in_d_bits_source};	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [2047:0]  _d_clr_wo_ready_T = 2048'h1 << _GEN_5;	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [1279:0]  d_clr_wo_ready = _GEN_4 ? _d_clr_wo_ready_T[1279:0] : 1280'h0;	// src/main/scala/chisel3/util/OneHot.scala:58:35, src/main/scala/tilelink/Monitor.scala:662:34, :671:{71,90}, :672:22, :735:34, :736:34
  wire           _GEN_6 = _d_first_T_2 & d_first_1 & ~d_release_ack;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:670:46, :671:74, :675:70
  wire [2047:0]  _d_clr_T = 2048'h1 << _GEN_5;	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [1279:0]  d_clr = _GEN_6 ? _d_clr_T[1279:0] : 1280'h0;	// src/main/scala/chisel3/util/OneHot.scala:58:35, src/main/scala/tilelink/Monitor.scala:661:34, :675:{70,89}, :676:21, :735:34, :736:34
  wire [16398:0] _GEN_7 = {16386'h0, io_in_d_bits_source, 2'h0};	// src/main/scala/chisel3/util/OneHot.scala:65:12, src/main/scala/tilelink/Monitor.scala:677:76
  wire [16398:0] _d_opcodes_clr_T_5 = 16399'hF << _GEN_7;	// src/main/scala/tilelink/Monitor.scala:677:76
  wire [5119:0]  d_opcodes_clr = _GEN_6 ? _d_opcodes_clr_T_5[5119:0] : 5120'h0;	// src/main/scala/tilelink/Monitor.scala:665:33, :675:{70,89}, :677:{21,76}, :737:34, :738:34
  wire [16398:0] _d_sizes_clr_T_5 = 16399'hF << _GEN_7;	// src/main/scala/tilelink/Monitor.scala:677:76, :678:74
  wire [5119:0]  d_sizes_clr = _GEN_6 ? _d_sizes_clr_T_5[5119:0] : 5120'h0;	// src/main/scala/tilelink/Monitor.scala:667:31, :675:{70,89}, :678:{21,74}, :737:34, :738:34
  wire           same_cycle_resp =
    _same_cycle_resp_T_1 & io_in_a_bits_source == io_in_d_bits_source;	// src/main/scala/tilelink/Monitor.scala:648:26, :681:{88,113}
  reg  [31:0]    watchdog;	// src/main/scala/tilelink/Monitor.scala:706:27
  reg  [1279:0]  inflight_1;	// src/main/scala/tilelink/Monitor.scala:723:35
  reg  [5119:0]  inflight_opcodes_1;	// src/main/scala/tilelink/Monitor.scala:724:35
  reg  [5119:0]  inflight_sizes_1;	// src/main/scala/tilelink/Monitor.scala:725:35
  reg            d_first_counter_2;	// src/main/scala/tilelink/Edges.scala:230:27
  wire           d_first_counter1_2 = d_first_counter_2 - 1'h1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28
  wire           d_first_2 = ~d_first_counter_2;	// src/main/scala/tilelink/Edges.scala:230:27, :232:25
  wire [5119:0]  _c_opcode_lookup_T_1 = inflight_opcodes_1 >> _GEN_0;	// src/main/scala/tilelink/Monitor.scala:634:44, :724:35, :746:44
  wire [3:0]     c_opcode_lookup = {1'h0, _c_opcode_lookup_T_1[3:1]};	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :42:11, :49:11, :306:31, :744:35, :746:{21,44,152}, :769:71, :792:88
  wire [5119:0]  _c_size_lookup_T_1 = inflight_sizes_1 >> _GEN_0;	// src/main/scala/tilelink/Monitor.scala:634:44, :725:35, :747:42
  wire [3:0]     c_size_lookup = {1'h0, _c_size_lookup_T_1[3:1]};	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :42:11, :49:11, :306:31, :745:35, :747:{21,42,146}, :769:71, :792:88
  wire           _GEN_8 = io_in_d_valid & d_first_2 & d_release_ack_1;	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:780:46, :781:71
  wire [2047:0]  _d_clr_wo_ready_T_1 = 2048'h1 << _GEN_5;	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [1279:0]  d_clr_wo_ready_1 = _GEN_8 ? _d_clr_wo_ready_T_1[1279:0] : 1280'h0;	// src/main/scala/chisel3/util/OneHot.scala:58:35, src/main/scala/tilelink/Monitor.scala:735:34, :736:34, :772:34, :781:{71,89}, :782:22
  wire           _GEN_9 = _d_first_T_2 & d_first_2 & d_release_ack_1;	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:780:46, :785:70
  wire [2047:0]  _d_clr_T_1 = 2048'h1 << _GEN_5;	// src/main/scala/chisel3/util/OneHot.scala:58:35
  wire [1279:0]  d_clr_1 = _GEN_9 ? _d_clr_T_1[1279:0] : 1280'h0;	// src/main/scala/chisel3/util/OneHot.scala:58:35, src/main/scala/tilelink/Monitor.scala:735:34, :736:34, :771:34, :785:{70,88}, :786:21
  wire [16398:0] _d_opcodes_clr_T_11 = 16399'hF << _GEN_7;	// src/main/scala/tilelink/Monitor.scala:677:76, :787:76
  wire [5119:0]  d_opcodes_clr_1 = _GEN_9 ? _d_opcodes_clr_T_11[5119:0] : 5120'h0;	// src/main/scala/tilelink/Monitor.scala:737:34, :738:34, :773:34, :785:{70,88}, :787:{21,76}
  wire [16398:0] _d_sizes_clr_T_11 = 16399'hF << _GEN_7;	// src/main/scala/tilelink/Monitor.scala:677:76, :788:74
  wire [5119:0]  d_sizes_clr_1 = _GEN_9 ? _d_sizes_clr_T_11[5119:0] : 5120'h0;	// src/main/scala/tilelink/Monitor.scala:737:34, :738:34, :774:34, :785:{70,88}, :788:{21,74}
  reg  [31:0]    watchdog_1;	// src/main/scala/tilelink/Monitor.scala:815:27
  `ifndef SYNTHESIS	// src/main/scala/tilelink/Monitor.scala:42:11
    always @(posedge clock) begin	// src/main/scala/tilelink/Monitor.scala:42:11
      automatic logic [7:0][2:0] _GEN_10 =
        {3'h4, 3'h5, 3'h2, 3'h1, 3'h1, 3'h1, 3'h0, 3'h0};	// src/main/scala/tilelink/Monitor.scala:686:39
      automatic logic [7:0][2:0] _GEN_11 =
        {3'h4, 3'h4, 3'h2, 3'h1, 3'h1, 3'h1, 3'h0, 3'h0};	// src/main/scala/tilelink/Monitor.scala:685:38
      automatic logic            _GEN_12 =
        io_in_a_valid & io_in_a_bits_opcode == 3'h6 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :81:25
      automatic logic            _GEN_13 = source_ok_uncommonBits > 11'h4FF;	// src/main/scala/diplomacy/Parameters.scala:52:56, :57:20
      automatic logic            _GEN_14 = io_in_a_bits_param > 3'h2;	// src/main/scala/tilelink/Bundles.scala:111:27, src/main/scala/tilelink/Monitor.scala:640:42, :641:42
      automatic logic            _GEN_15 = io_in_a_bits_mask != 8'hFF;	// src/main/scala/tilelink/Monitor.scala:88:{18,31}
      automatic logic            _GEN_16 =
        io_in_a_valid & (&io_in_a_bits_opcode) & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :92:25
      automatic logic            _GEN_17 =
        io_in_a_valid & io_in_a_bits_opcode == 3'h4 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :104:25, :640:42, :641:42
      automatic logic            _GEN_18 = io_in_a_bits_address[27:26] != 2'h3;	// src/main/scala/diplomacy/Parameters.scala:137:{41,46,59}, src/main/scala/tilelink/Monitor.scala:17:14, src/main/scala/util/Misc.scala:206:21
      automatic logic            _GEN_19 = io_in_a_bits_mask != mask;	// src/main/scala/tilelink/Monitor.scala:110:30, src/main/scala/util/Misc.scala:222:10
      automatic logic            _GEN_20 =
        io_in_a_valid & io_in_a_bits_opcode == 3'h0 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :114:25, :640:42, :641:42, :752:40
      automatic logic            _GEN_21 =
        io_in_a_valid & io_in_a_bits_opcode == 3'h1 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :122:25, :640:42, :641:42
      automatic logic            _GEN_22 =
        io_in_a_valid & io_in_a_bits_opcode == 3'h2 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :130:25, :640:42, :641:42
      automatic logic            _GEN_23 =
        io_in_a_valid & io_in_a_bits_opcode == 3'h3 & ~reset;	// src/main/scala/tilelink/Bundles.scala:148:30, src/main/scala/tilelink/Monitor.scala:42:11, :138:25
      automatic logic            _GEN_24 =
        io_in_a_valid & io_in_a_bits_opcode == 3'h5 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :146:25, :641:42
      automatic logic            _GEN_25 = io_in_d_valid & _GEN & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :310:25
      automatic logic            _GEN_26 = source_ok_uncommonBits_1 > 11'h4FF;	// src/main/scala/diplomacy/Parameters.scala:52:56, :57:20
      automatic logic            _GEN_27 = io_in_d_bits_size != 2'h3;	// src/main/scala/tilelink/Monitor.scala:312:27, src/main/scala/util/Misc.scala:206:21
      automatic logic            _GEN_28 =
        io_in_d_valid & io_in_d_bits_opcode == 3'h4 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :318:25, :640:42, :641:42
      automatic logic            _GEN_29 =
        io_in_d_valid & io_in_d_bits_opcode == 3'h5 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :328:25, :641:42
      automatic logic            _GEN_30 = io_in_a_valid & ~a_first & ~reset;	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:42:11, :389:22
      automatic logic            _GEN_31 = io_in_d_valid & ~d_first & ~reset;	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :541:22
      automatic logic [1279:0]   _GEN_32 = {1269'h0, io_in_d_bits_source};	// src/main/scala/tilelink/Monitor.scala:658:26, :682:25
      automatic logic            _GEN_33 = _GEN_4 & same_cycle_resp & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :671:71, :681:88
      automatic logic            _GEN_34 = _GEN_4 & ~same_cycle_resp & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :671:71, :681:88, :684:30
      automatic logic [3:0]      _GEN_35 = {2'h0, io_in_d_bits_size};	// src/main/scala/chisel3/util/OneHot.scala:65:12, src/main/scala/tilelink/Monitor.scala:691:36
      automatic logic            _GEN_36 = _GEN_8 & ~reset;	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :781:71
      automatic logic [1279:0]   _GEN_37;	// src/main/scala/tilelink/Monitor.scala:658:26
      automatic logic [1279:0]   _GEN_38;	// src/main/scala/tilelink/Monitor.scala:682:25
      automatic logic [1279:0]   _GEN_39;	// src/main/scala/tilelink/Monitor.scala:793:25
      if (_GEN_12) begin	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries AcquireBlock type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries AcquireBlock from a client which does not support Probe (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_12 & _GEN_13) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquireBlock carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_12 & ~(&io_in_a_bits_size)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, src/main/scala/util/Misc.scala:206:21
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquireBlock smaller than a beat (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_12 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquireBlock address not aligned to size (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_12 & _GEN_14) begin	// src/main/scala/tilelink/Bundles.scala:111:27, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquireBlock carries invalid grow param (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_12 & _GEN_15) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :88:31
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquireBlock contains invalid mask (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_12 & io_in_a_bits_corrupt) begin	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquireBlock is corrupt (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_16) begin	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries AcquirePerm type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries AcquirePerm from a client which does not support Probe (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_16 & _GEN_13) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_16 & ~(&io_in_a_bits_size)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, src/main/scala/util/Misc.scala:206:21
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm smaller than a beat (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_16 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm address not aligned to size (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_16 & _GEN_14) begin	// src/main/scala/tilelink/Bundles.scala:111:27, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm carries invalid grow param (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_16 & ~(|io_in_a_bits_param)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :99:31
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm requests NtoB (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_16 & _GEN_15) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :88:31
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm contains invalid mask (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_16 & io_in_a_bits_corrupt) begin	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel AcquirePerm is corrupt (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_17 & uncommonBits_3 > 11'h4FF) begin	// src/main/scala/diplomacy/Parameters.scala:52:56, :57:20, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries Get type which master claims it can't emit (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_17 & _GEN_18) begin	// src/main/scala/diplomacy/Parameters.scala:137:{41,46,59}, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries Get type which slave claims it can't support (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_17 & _GEN_13) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Get carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_17 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Get address not aligned to size (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_17 & (|io_in_a_bits_param)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :99:31
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Get carries invalid param (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_17 & _GEN_19) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :110:30
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Get contains invalid mask (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_17 & io_in_a_bits_corrupt) begin	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Get is corrupt (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_20 & ~(uncommonBits_4 < 11'h500 & ~_GEN_18)) begin	// src/main/scala/diplomacy/Parameters.scala:52:56, :57:20, :137:{41,46,59}, src/main/scala/tilelink/Monitor.scala:42:11, :115:71
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries PutFull type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_20 & _GEN_13) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutFull carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_20 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutFull address not aligned to size (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_20 & (|io_in_a_bits_param)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :99:31
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutFull carries invalid param (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_20 & _GEN_19) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :110:30
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutFull contains invalid mask (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_21 & ~(uncommonBits_5 < 11'h500 & ~_GEN_18)) begin	// src/main/scala/diplomacy/Parameters.scala:52:56, :57:20, :137:{41,46,59}, src/main/scala/tilelink/Monitor.scala:42:11, :123:74
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries PutPartial type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_21 & _GEN_13) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutPartial carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_21 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutPartial address not aligned to size (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_21 & (|io_in_a_bits_param)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :99:31
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutPartial carries invalid param (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_21 & (|(io_in_a_bits_mask & ~mask))) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :127:{31,33,40}, src/main/scala/util/Misc.scala:222:10
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel PutPartial contains invalid mask (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_22) begin	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries Arithmetic type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_22 & _GEN_13) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Arithmetic carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_22 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Arithmetic address not aligned to size (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_22 & io_in_a_bits_param > 3'h4) begin	// src/main/scala/tilelink/Bundles.scala:141:33, src/main/scala/tilelink/Monitor.scala:42:11, :640:42, :641:42
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Arithmetic carries invalid opcode param (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_22 & _GEN_19) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :110:30
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Arithmetic contains invalid mask (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_23) begin	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries Logical type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_23 & _GEN_13) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Logical carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_23 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Logical address not aligned to size (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_23 & io_in_a_bits_param[2]) begin	// src/main/scala/tilelink/Bundles.scala:148:30, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Logical carries invalid opcode param (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_23 & _GEN_19) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :110:30
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Logical contains invalid mask (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_24) begin	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel carries Hint type which is unexpected using diplomatic parameters (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_24 & _GEN_13) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Hint carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_24 & ~is_aligned) begin	// src/main/scala/tilelink/Edges.scala:22:24, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Hint address not aligned to size (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_24 & (|(io_in_a_bits_param[2:1]))) begin	// src/main/scala/tilelink/Bundles.scala:161:28, src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Hint carries invalid opcode param (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_24 & _GEN_19) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :110:30
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Hint contains invalid mask (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_24 & io_in_a_bits_corrupt) begin	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel Hint is corrupt (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (io_in_d_valid & ~reset & (&io_in_d_bits_opcode)) begin	// src/main/scala/tilelink/Bundles.scala:45:24, src/main/scala/tilelink/Monitor.scala:42:11, :49:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel has invalid opcode (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_25 & _GEN_26) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:49:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel ReleaseAck carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_25 & _GEN_27) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :312:27
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel ReleaseAck smaller than a beat (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_28 & _GEN_26) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:49:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel Grant carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_28) begin	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel Grant carries invalid sink ID (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_28 & _GEN_27) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :312:27
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel Grant smaller than a beat (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_29 & _GEN_26) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:49:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel GrantData carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_29) begin	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel GrantData carries invalid sink ID (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_29 & _GEN_27) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :312:27
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel GrantData smaller than a beat (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (io_in_d_valid & io_in_d_bits_opcode == 3'h0 & ~reset & _GEN_26) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :338:25, :640:42, :641:42, :752:40
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel AccessAck carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (io_in_d_valid & io_in_d_bits_opcode == 3'h1 & ~reset & _GEN_26) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :346:25, :640:42, :641:42
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel AccessAckData carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (io_in_d_valid & io_in_d_bits_opcode == 3'h2 & ~reset & _GEN_26) begin	// src/main/scala/diplomacy/Parameters.scala:57:20, src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :354:25, :640:42, :641:42
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel HintAck carries invalid source ID (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_30 & io_in_a_bits_opcode != opcode) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :384:22, :390:32
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel opcode changed within multibeat operation (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_30 & io_in_a_bits_param != param) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :385:22, :391:32
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel param changed within multibeat operation (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_30 & io_in_a_bits_size != size) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :386:22, :392:32
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel size changed within multibeat operation (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_30 & io_in_a_bits_source != source) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :387:22, :393:32
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel source changed within multibeat operation (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_30 & io_in_a_bits_address != address) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :388:22, :394:32
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel address changed with multibeat operation (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      if (_GEN_31 & io_in_d_bits_opcode != opcode_1) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :535:22, :542:29
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel opcode changed within multibeat operation (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_31 & io_in_d_bits_size != size_1) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :537:22, :544:29
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel size changed within multibeat operation (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_31 & io_in_d_bits_source != source_1) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :538:22, :545:29
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel source changed within multibeat operation (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      _GEN_37 = inflight >> io_in_a_bits_source;	// src/main/scala/tilelink/Monitor.scala:611:27, :658:26
      if (_GEN_2 & ~reset & _GEN_37[0]) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :652:25, :658:26
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: 'A' channel re-used a source ID (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      _GEN_38 = inflight >> _GEN_32;	// src/main/scala/tilelink/Monitor.scala:611:27, :682:25
      if (_GEN_4 & ~reset & ~(_GEN_38[0] | same_cycle_resp)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :671:71, :681:88, :682:{25,49}
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel acknowledged for nothing inflight (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_33
          & ~(io_in_d_bits_opcode == _GEN_11[io_in_a_bits_opcode]
              | io_in_d_bits_opcode == _GEN_10[io_in_a_bits_opcode])) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :685:{38,77}, :686:39
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper opcode response (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_33 & io_in_a_bits_size != io_in_d_bits_size) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :687:36
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper response size (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_34
          & ~(io_in_d_bits_opcode == _GEN_11[a_opcode_lookup[2:0]]
              | io_in_d_bits_opcode == _GEN_10[a_opcode_lookup[2:0]])) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :632:35, :685:38, :686:39, :689:{38,72}, :690:38
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper opcode response (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_34 & _GEN_35 != a_size_lookup) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :636:33, :691:36
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper response size (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_3 & a_first_1 & io_in_a_valid & io_in_a_bits_source == io_in_d_bits_source
          & ~d_release_ack & ~reset & ~(~io_in_d_ready | io_in_a_ready)) begin	// src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :670:46, :671:{26,74}, :694:90, :695:{15,32}
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: ready check\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (~reset & ~(a_set_wo_ready != d_clr_wo_ready | a_set_wo_ready == 1280'h0)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :49:11, :624:34, :662:34, :699:{29,48,67}, :735:34, :736:34
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'A' and 'D' concurrent, despite minlatency > 0 (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (~reset
          & ~(inflight == 1280'h0 | _plusarg_reader_out == 32'h0
              | watchdog < _plusarg_reader_out)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :611:27, :706:27, :709:{26,39,47,59}, :735:34, :736:34, src/main/scala/util/PlusArg.scala:80:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: TileLink timeout expired (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
      _GEN_39 = inflight_1 >> _GEN_32;	// src/main/scala/tilelink/Monitor.scala:682:25, :723:35, :793:25
      if (_GEN_36 & ~(_GEN_39[0])) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :793:25
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel acknowledged for nothing inflight (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (_GEN_36 & _GEN_35 != c_size_lookup) begin	// src/main/scala/tilelink/Monitor.scala:49:11, :691:36, :745:35, :797:36
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $error("Assertion failed: 'D' channel contains improper response size (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:49 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:49:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:49:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:49:11
      end
      if (~reset
          & ~(inflight_1 == 1280'h0 | _plusarg_reader_1_out == 32'h0
              | watchdog_1 < _plusarg_reader_1_out)) begin	// src/main/scala/tilelink/Monitor.scala:42:11, :706:27, :723:35, :735:34, :736:34, :815:27, :818:{26,39,47,59}, src/main/scala/util/PlusArg.scala:80:11
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $error("Assertion failed: TileLink timeout expired (connected at src/main/scala/devices/tilelink/Plic.scala:362:35)\n    at Monitor.scala:42 assert(cond, message)\n");	// src/main/scala/tilelink/Monitor.scala:42:11
        if (`STOP_COND_)	// src/main/scala/tilelink/Monitor.scala:42:11
          $fatal;	// src/main/scala/tilelink/Monitor.scala:42:11
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  always @(posedge clock) begin
    if (reset) begin
      a_first_counter <= 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :230:27, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
      d_first_counter <= 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :230:27, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
      inflight <= 1280'h0;	// src/main/scala/tilelink/Monitor.scala:611:27, :735:34, :736:34
      inflight_opcodes <= 5120'h0;	// src/main/scala/tilelink/Monitor.scala:613:35, :737:34, :738:34
      inflight_sizes <= 5120'h0;	// src/main/scala/tilelink/Monitor.scala:615:33, :737:34, :738:34
      a_first_counter_1 <= 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :230:27, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
      d_first_counter_1 <= 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :230:27, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
      watchdog <= 32'h0;	// src/main/scala/tilelink/Monitor.scala:706:27
      inflight_1 <= 1280'h0;	// src/main/scala/tilelink/Monitor.scala:723:35, :735:34, :736:34
      inflight_opcodes_1 <= 5120'h0;	// src/main/scala/tilelink/Monitor.scala:724:35, :737:34, :738:34
      inflight_sizes_1 <= 5120'h0;	// src/main/scala/tilelink/Monitor.scala:725:35, :737:34, :738:34
      d_first_counter_2 <= 1'h0;	// src/main/scala/tilelink/Edges.scala:103:36, :221:59, :222:14, :230:27, :234:22, :235:25, src/main/scala/tilelink/Monitor.scala:17:14, :49:11, :306:31, :769:71, :792:88
      watchdog_1 <= 32'h0;	// src/main/scala/tilelink/Monitor.scala:706:27, :815:27
    end
    else begin
      if (_a_first_T_1) begin	// src/main/scala/chisel3/util/Decoupled.scala:52:35
        a_first_counter <= ~a_first & a_first_counter1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28, :232:25, :237:21
        a_first_counter_1 <= ~a_first_1 & a_first_counter1_1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28, :232:25, :237:21
      end
      if (_d_first_T_2) begin	// src/main/scala/chisel3/util/Decoupled.scala:52:35
        d_first_counter <= ~d_first & d_first_counter1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28, :232:25, :237:21
        d_first_counter_1 <= ~d_first_1 & d_first_counter1_1;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28, :232:25, :237:21
        d_first_counter_2 <= ~d_first_2 & d_first_counter1_2;	// src/main/scala/tilelink/Edges.scala:230:27, :231:28, :232:25, :237:21
        watchdog_1 <= 32'h0;	// src/main/scala/tilelink/Monitor.scala:706:27, :815:27
      end
      else	// src/main/scala/chisel3/util/Decoupled.scala:52:35
        watchdog_1 <= watchdog_1 + 32'h1;	// src/main/scala/tilelink/Monitor.scala:711:26, :815:27, :820:26
      inflight <= (inflight | a_set) & ~d_clr;	// src/main/scala/tilelink/Monitor.scala:611:27, :623:34, :661:34, :702:{27,36,38}
      inflight_opcodes <= (inflight_opcodes | a_opcodes_set) & ~d_opcodes_clr;	// src/main/scala/tilelink/Monitor.scala:613:35, :627:33, :665:33, :703:{43,60,62}
      inflight_sizes <= (inflight_sizes | a_sizes_set) & ~d_sizes_clr;	// src/main/scala/tilelink/Monitor.scala:615:33, :629:31, :667:31, :704:{39,54,56}
      if (_a_first_T_1 | _d_first_T_2)	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Monitor.scala:712:25
        watchdog <= 32'h0;	// src/main/scala/tilelink/Monitor.scala:706:27
      else	// src/main/scala/tilelink/Monitor.scala:712:25
        watchdog <= watchdog + 32'h1;	// src/main/scala/tilelink/Monitor.scala:706:27, :711:26
      inflight_1 <= inflight_1 & ~d_clr_1;	// src/main/scala/tilelink/Monitor.scala:723:35, :771:34, :811:{44,46}
      inflight_opcodes_1 <= inflight_opcodes_1 & ~d_opcodes_clr_1;	// src/main/scala/tilelink/Monitor.scala:724:35, :773:34, :812:{60,62}
      inflight_sizes_1 <= inflight_sizes_1 & ~d_sizes_clr_1;	// src/main/scala/tilelink/Monitor.scala:725:35, :774:34, :813:{56,58}
    end
    if (_a_first_T_1 & a_first) begin	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:396:18
      opcode <= io_in_a_bits_opcode;	// src/main/scala/tilelink/Monitor.scala:384:22
      param <= io_in_a_bits_param;	// src/main/scala/tilelink/Monitor.scala:385:22
      size <= io_in_a_bits_size;	// src/main/scala/tilelink/Monitor.scala:386:22
      source <= io_in_a_bits_source;	// src/main/scala/tilelink/Monitor.scala:387:22
      address <= io_in_a_bits_address;	// src/main/scala/tilelink/Monitor.scala:388:22
    end
    if (_d_first_T_2 & d_first) begin	// src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/tilelink/Edges.scala:232:25, src/main/scala/tilelink/Monitor.scala:549:18
      opcode_1 <= io_in_d_bits_opcode;	// src/main/scala/tilelink/Monitor.scala:535:22
      size_1 <= io_in_d_bits_size;	// src/main/scala/tilelink/Monitor.scala:537:22
      source_1 <= io_in_d_bits_source;	// src/main/scala/tilelink/Monitor.scala:538:22
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin
      automatic logic [31:0] _RANDOM[0:724];
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [9:0] i = 10'h0; i < 10'h2D5; i += 10'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        a_first_counter = _RANDOM[10'h0][0];	// src/main/scala/tilelink/Edges.scala:230:27
        opcode = _RANDOM[10'h0][3:1];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:384:22
        param = _RANDOM[10'h0][6:4];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:385:22
        size = _RANDOM[10'h0][8:7];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:386:22
        source = _RANDOM[10'h0][19:9];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:387:22
        address = {_RANDOM[10'h0][31:20], _RANDOM[10'h1][15:0]};	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:388:22
        d_first_counter = _RANDOM[10'h1][16];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:388:22
        opcode_1 = _RANDOM[10'h1][19:17];	// src/main/scala/tilelink/Monitor.scala:388:22, :535:22
        size_1 = _RANDOM[10'h1][23:22];	// src/main/scala/tilelink/Monitor.scala:388:22, :537:22
        source_1 = {_RANDOM[10'h1][31:24], _RANDOM[10'h2][2:0]};	// src/main/scala/tilelink/Monitor.scala:388:22, :538:22
        inflight =
          {_RANDOM[10'h2][31:5],
           _RANDOM[10'h3],
           _RANDOM[10'h4],
           _RANDOM[10'h5],
           _RANDOM[10'h6],
           _RANDOM[10'h7],
           _RANDOM[10'h8],
           _RANDOM[10'h9],
           _RANDOM[10'hA],
           _RANDOM[10'hB],
           _RANDOM[10'hC],
           _RANDOM[10'hD],
           _RANDOM[10'hE],
           _RANDOM[10'hF],
           _RANDOM[10'h10],
           _RANDOM[10'h11],
           _RANDOM[10'h12],
           _RANDOM[10'h13],
           _RANDOM[10'h14],
           _RANDOM[10'h15],
           _RANDOM[10'h16],
           _RANDOM[10'h17],
           _RANDOM[10'h18],
           _RANDOM[10'h19],
           _RANDOM[10'h1A],
           _RANDOM[10'h1B],
           _RANDOM[10'h1C],
           _RANDOM[10'h1D],
           _RANDOM[10'h1E],
           _RANDOM[10'h1F],
           _RANDOM[10'h20],
           _RANDOM[10'h21],
           _RANDOM[10'h22],
           _RANDOM[10'h23],
           _RANDOM[10'h24],
           _RANDOM[10'h25],
           _RANDOM[10'h26],
           _RANDOM[10'h27],
           _RANDOM[10'h28],
           _RANDOM[10'h29],
           _RANDOM[10'h2A][4:0]};	// src/main/scala/tilelink/Monitor.scala:538:22, :611:27
        inflight_opcodes =
          {_RANDOM[10'h2A][31:5],
           _RANDOM[10'h2B],
           _RANDOM[10'h2C],
           _RANDOM[10'h2D],
           _RANDOM[10'h2E],
           _RANDOM[10'h2F],
           _RANDOM[10'h30],
           _RANDOM[10'h31],
           _RANDOM[10'h32],
           _RANDOM[10'h33],
           _RANDOM[10'h34],
           _RANDOM[10'h35],
           _RANDOM[10'h36],
           _RANDOM[10'h37],
           _RANDOM[10'h38],
           _RANDOM[10'h39],
           _RANDOM[10'h3A],
           _RANDOM[10'h3B],
           _RANDOM[10'h3C],
           _RANDOM[10'h3D],
           _RANDOM[10'h3E],
           _RANDOM[10'h3F],
           _RANDOM[10'h40],
           _RANDOM[10'h41],
           _RANDOM[10'h42],
           _RANDOM[10'h43],
           _RANDOM[10'h44],
           _RANDOM[10'h45],
           _RANDOM[10'h46],
           _RANDOM[10'h47],
           _RANDOM[10'h48],
           _RANDOM[10'h49],
           _RANDOM[10'h4A],
           _RANDOM[10'h4B],
           _RANDOM[10'h4C],
           _RANDOM[10'h4D],
           _RANDOM[10'h4E],
           _RANDOM[10'h4F],
           _RANDOM[10'h50],
           _RANDOM[10'h51],
           _RANDOM[10'h52],
           _RANDOM[10'h53],
           _RANDOM[10'h54],
           _RANDOM[10'h55],
           _RANDOM[10'h56],
           _RANDOM[10'h57],
           _RANDOM[10'h58],
           _RANDOM[10'h59],
           _RANDOM[10'h5A],
           _RANDOM[10'h5B],
           _RANDOM[10'h5C],
           _RANDOM[10'h5D],
           _RANDOM[10'h5E],
           _RANDOM[10'h5F],
           _RANDOM[10'h60],
           _RANDOM[10'h61],
           _RANDOM[10'h62],
           _RANDOM[10'h63],
           _RANDOM[10'h64],
           _RANDOM[10'h65],
           _RANDOM[10'h66],
           _RANDOM[10'h67],
           _RANDOM[10'h68],
           _RANDOM[10'h69],
           _RANDOM[10'h6A],
           _RANDOM[10'h6B],
           _RANDOM[10'h6C],
           _RANDOM[10'h6D],
           _RANDOM[10'h6E],
           _RANDOM[10'h6F],
           _RANDOM[10'h70],
           _RANDOM[10'h71],
           _RANDOM[10'h72],
           _RANDOM[10'h73],
           _RANDOM[10'h74],
           _RANDOM[10'h75],
           _RANDOM[10'h76],
           _RANDOM[10'h77],
           _RANDOM[10'h78],
           _RANDOM[10'h79],
           _RANDOM[10'h7A],
           _RANDOM[10'h7B],
           _RANDOM[10'h7C],
           _RANDOM[10'h7D],
           _RANDOM[10'h7E],
           _RANDOM[10'h7F],
           _RANDOM[10'h80],
           _RANDOM[10'h81],
           _RANDOM[10'h82],
           _RANDOM[10'h83],
           _RANDOM[10'h84],
           _RANDOM[10'h85],
           _RANDOM[10'h86],
           _RANDOM[10'h87],
           _RANDOM[10'h88],
           _RANDOM[10'h89],
           _RANDOM[10'h8A],
           _RANDOM[10'h8B],
           _RANDOM[10'h8C],
           _RANDOM[10'h8D],
           _RANDOM[10'h8E],
           _RANDOM[10'h8F],
           _RANDOM[10'h90],
           _RANDOM[10'h91],
           _RANDOM[10'h92],
           _RANDOM[10'h93],
           _RANDOM[10'h94],
           _RANDOM[10'h95],
           _RANDOM[10'h96],
           _RANDOM[10'h97],
           _RANDOM[10'h98],
           _RANDOM[10'h99],
           _RANDOM[10'h9A],
           _RANDOM[10'h9B],
           _RANDOM[10'h9C],
           _RANDOM[10'h9D],
           _RANDOM[10'h9E],
           _RANDOM[10'h9F],
           _RANDOM[10'hA0],
           _RANDOM[10'hA1],
           _RANDOM[10'hA2],
           _RANDOM[10'hA3],
           _RANDOM[10'hA4],
           _RANDOM[10'hA5],
           _RANDOM[10'hA6],
           _RANDOM[10'hA7],
           _RANDOM[10'hA8],
           _RANDOM[10'hA9],
           _RANDOM[10'hAA],
           _RANDOM[10'hAB],
           _RANDOM[10'hAC],
           _RANDOM[10'hAD],
           _RANDOM[10'hAE],
           _RANDOM[10'hAF],
           _RANDOM[10'hB0],
           _RANDOM[10'hB1],
           _RANDOM[10'hB2],
           _RANDOM[10'hB3],
           _RANDOM[10'hB4],
           _RANDOM[10'hB5],
           _RANDOM[10'hB6],
           _RANDOM[10'hB7],
           _RANDOM[10'hB8],
           _RANDOM[10'hB9],
           _RANDOM[10'hBA],
           _RANDOM[10'hBB],
           _RANDOM[10'hBC],
           _RANDOM[10'hBD],
           _RANDOM[10'hBE],
           _RANDOM[10'hBF],
           _RANDOM[10'hC0],
           _RANDOM[10'hC1],
           _RANDOM[10'hC2],
           _RANDOM[10'hC3],
           _RANDOM[10'hC4],
           _RANDOM[10'hC5],
           _RANDOM[10'hC6],
           _RANDOM[10'hC7],
           _RANDOM[10'hC8],
           _RANDOM[10'hC9],
           _RANDOM[10'hCA][4:0]};	// src/main/scala/tilelink/Monitor.scala:611:27, :613:35
        inflight_sizes =
          {_RANDOM[10'hCA][31:5],
           _RANDOM[10'hCB],
           _RANDOM[10'hCC],
           _RANDOM[10'hCD],
           _RANDOM[10'hCE],
           _RANDOM[10'hCF],
           _RANDOM[10'hD0],
           _RANDOM[10'hD1],
           _RANDOM[10'hD2],
           _RANDOM[10'hD3],
           _RANDOM[10'hD4],
           _RANDOM[10'hD5],
           _RANDOM[10'hD6],
           _RANDOM[10'hD7],
           _RANDOM[10'hD8],
           _RANDOM[10'hD9],
           _RANDOM[10'hDA],
           _RANDOM[10'hDB],
           _RANDOM[10'hDC],
           _RANDOM[10'hDD],
           _RANDOM[10'hDE],
           _RANDOM[10'hDF],
           _RANDOM[10'hE0],
           _RANDOM[10'hE1],
           _RANDOM[10'hE2],
           _RANDOM[10'hE3],
           _RANDOM[10'hE4],
           _RANDOM[10'hE5],
           _RANDOM[10'hE6],
           _RANDOM[10'hE7],
           _RANDOM[10'hE8],
           _RANDOM[10'hE9],
           _RANDOM[10'hEA],
           _RANDOM[10'hEB],
           _RANDOM[10'hEC],
           _RANDOM[10'hED],
           _RANDOM[10'hEE],
           _RANDOM[10'hEF],
           _RANDOM[10'hF0],
           _RANDOM[10'hF1],
           _RANDOM[10'hF2],
           _RANDOM[10'hF3],
           _RANDOM[10'hF4],
           _RANDOM[10'hF5],
           _RANDOM[10'hF6],
           _RANDOM[10'hF7],
           _RANDOM[10'hF8],
           _RANDOM[10'hF9],
           _RANDOM[10'hFA],
           _RANDOM[10'hFB],
           _RANDOM[10'hFC],
           _RANDOM[10'hFD],
           _RANDOM[10'hFE],
           _RANDOM[10'hFF],
           _RANDOM[10'h100],
           _RANDOM[10'h101],
           _RANDOM[10'h102],
           _RANDOM[10'h103],
           _RANDOM[10'h104],
           _RANDOM[10'h105],
           _RANDOM[10'h106],
           _RANDOM[10'h107],
           _RANDOM[10'h108],
           _RANDOM[10'h109],
           _RANDOM[10'h10A],
           _RANDOM[10'h10B],
           _RANDOM[10'h10C],
           _RANDOM[10'h10D],
           _RANDOM[10'h10E],
           _RANDOM[10'h10F],
           _RANDOM[10'h110],
           _RANDOM[10'h111],
           _RANDOM[10'h112],
           _RANDOM[10'h113],
           _RANDOM[10'h114],
           _RANDOM[10'h115],
           _RANDOM[10'h116],
           _RANDOM[10'h117],
           _RANDOM[10'h118],
           _RANDOM[10'h119],
           _RANDOM[10'h11A],
           _RANDOM[10'h11B],
           _RANDOM[10'h11C],
           _RANDOM[10'h11D],
           _RANDOM[10'h11E],
           _RANDOM[10'h11F],
           _RANDOM[10'h120],
           _RANDOM[10'h121],
           _RANDOM[10'h122],
           _RANDOM[10'h123],
           _RANDOM[10'h124],
           _RANDOM[10'h125],
           _RANDOM[10'h126],
           _RANDOM[10'h127],
           _RANDOM[10'h128],
           _RANDOM[10'h129],
           _RANDOM[10'h12A],
           _RANDOM[10'h12B],
           _RANDOM[10'h12C],
           _RANDOM[10'h12D],
           _RANDOM[10'h12E],
           _RANDOM[10'h12F],
           _RANDOM[10'h130],
           _RANDOM[10'h131],
           _RANDOM[10'h132],
           _RANDOM[10'h133],
           _RANDOM[10'h134],
           _RANDOM[10'h135],
           _RANDOM[10'h136],
           _RANDOM[10'h137],
           _RANDOM[10'h138],
           _RANDOM[10'h139],
           _RANDOM[10'h13A],
           _RANDOM[10'h13B],
           _RANDOM[10'h13C],
           _RANDOM[10'h13D],
           _RANDOM[10'h13E],
           _RANDOM[10'h13F],
           _RANDOM[10'h140],
           _RANDOM[10'h141],
           _RANDOM[10'h142],
           _RANDOM[10'h143],
           _RANDOM[10'h144],
           _RANDOM[10'h145],
           _RANDOM[10'h146],
           _RANDOM[10'h147],
           _RANDOM[10'h148],
           _RANDOM[10'h149],
           _RANDOM[10'h14A],
           _RANDOM[10'h14B],
           _RANDOM[10'h14C],
           _RANDOM[10'h14D],
           _RANDOM[10'h14E],
           _RANDOM[10'h14F],
           _RANDOM[10'h150],
           _RANDOM[10'h151],
           _RANDOM[10'h152],
           _RANDOM[10'h153],
           _RANDOM[10'h154],
           _RANDOM[10'h155],
           _RANDOM[10'h156],
           _RANDOM[10'h157],
           _RANDOM[10'h158],
           _RANDOM[10'h159],
           _RANDOM[10'h15A],
           _RANDOM[10'h15B],
           _RANDOM[10'h15C],
           _RANDOM[10'h15D],
           _RANDOM[10'h15E],
           _RANDOM[10'h15F],
           _RANDOM[10'h160],
           _RANDOM[10'h161],
           _RANDOM[10'h162],
           _RANDOM[10'h163],
           _RANDOM[10'h164],
           _RANDOM[10'h165],
           _RANDOM[10'h166],
           _RANDOM[10'h167],
           _RANDOM[10'h168],
           _RANDOM[10'h169],
           _RANDOM[10'h16A][4:0]};	// src/main/scala/tilelink/Monitor.scala:613:35, :615:33
        a_first_counter_1 = _RANDOM[10'h16A][5];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:615:33
        d_first_counter_1 = _RANDOM[10'h16A][6];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:615:33
        watchdog = {_RANDOM[10'h16A][31:7], _RANDOM[10'h16B][6:0]};	// src/main/scala/tilelink/Monitor.scala:615:33, :706:27
        inflight_1 =
          {_RANDOM[10'h16B][31:7],
           _RANDOM[10'h16C],
           _RANDOM[10'h16D],
           _RANDOM[10'h16E],
           _RANDOM[10'h16F],
           _RANDOM[10'h170],
           _RANDOM[10'h171],
           _RANDOM[10'h172],
           _RANDOM[10'h173],
           _RANDOM[10'h174],
           _RANDOM[10'h175],
           _RANDOM[10'h176],
           _RANDOM[10'h177],
           _RANDOM[10'h178],
           _RANDOM[10'h179],
           _RANDOM[10'h17A],
           _RANDOM[10'h17B],
           _RANDOM[10'h17C],
           _RANDOM[10'h17D],
           _RANDOM[10'h17E],
           _RANDOM[10'h17F],
           _RANDOM[10'h180],
           _RANDOM[10'h181],
           _RANDOM[10'h182],
           _RANDOM[10'h183],
           _RANDOM[10'h184],
           _RANDOM[10'h185],
           _RANDOM[10'h186],
           _RANDOM[10'h187],
           _RANDOM[10'h188],
           _RANDOM[10'h189],
           _RANDOM[10'h18A],
           _RANDOM[10'h18B],
           _RANDOM[10'h18C],
           _RANDOM[10'h18D],
           _RANDOM[10'h18E],
           _RANDOM[10'h18F],
           _RANDOM[10'h190],
           _RANDOM[10'h191],
           _RANDOM[10'h192],
           _RANDOM[10'h193][6:0]};	// src/main/scala/tilelink/Monitor.scala:706:27, :723:35
        inflight_opcodes_1 =
          {_RANDOM[10'h193][31:7],
           _RANDOM[10'h194],
           _RANDOM[10'h195],
           _RANDOM[10'h196],
           _RANDOM[10'h197],
           _RANDOM[10'h198],
           _RANDOM[10'h199],
           _RANDOM[10'h19A],
           _RANDOM[10'h19B],
           _RANDOM[10'h19C],
           _RANDOM[10'h19D],
           _RANDOM[10'h19E],
           _RANDOM[10'h19F],
           _RANDOM[10'h1A0],
           _RANDOM[10'h1A1],
           _RANDOM[10'h1A2],
           _RANDOM[10'h1A3],
           _RANDOM[10'h1A4],
           _RANDOM[10'h1A5],
           _RANDOM[10'h1A6],
           _RANDOM[10'h1A7],
           _RANDOM[10'h1A8],
           _RANDOM[10'h1A9],
           _RANDOM[10'h1AA],
           _RANDOM[10'h1AB],
           _RANDOM[10'h1AC],
           _RANDOM[10'h1AD],
           _RANDOM[10'h1AE],
           _RANDOM[10'h1AF],
           _RANDOM[10'h1B0],
           _RANDOM[10'h1B1],
           _RANDOM[10'h1B2],
           _RANDOM[10'h1B3],
           _RANDOM[10'h1B4],
           _RANDOM[10'h1B5],
           _RANDOM[10'h1B6],
           _RANDOM[10'h1B7],
           _RANDOM[10'h1B8],
           _RANDOM[10'h1B9],
           _RANDOM[10'h1BA],
           _RANDOM[10'h1BB],
           _RANDOM[10'h1BC],
           _RANDOM[10'h1BD],
           _RANDOM[10'h1BE],
           _RANDOM[10'h1BF],
           _RANDOM[10'h1C0],
           _RANDOM[10'h1C1],
           _RANDOM[10'h1C2],
           _RANDOM[10'h1C3],
           _RANDOM[10'h1C4],
           _RANDOM[10'h1C5],
           _RANDOM[10'h1C6],
           _RANDOM[10'h1C7],
           _RANDOM[10'h1C8],
           _RANDOM[10'h1C9],
           _RANDOM[10'h1CA],
           _RANDOM[10'h1CB],
           _RANDOM[10'h1CC],
           _RANDOM[10'h1CD],
           _RANDOM[10'h1CE],
           _RANDOM[10'h1CF],
           _RANDOM[10'h1D0],
           _RANDOM[10'h1D1],
           _RANDOM[10'h1D2],
           _RANDOM[10'h1D3],
           _RANDOM[10'h1D4],
           _RANDOM[10'h1D5],
           _RANDOM[10'h1D6],
           _RANDOM[10'h1D7],
           _RANDOM[10'h1D8],
           _RANDOM[10'h1D9],
           _RANDOM[10'h1DA],
           _RANDOM[10'h1DB],
           _RANDOM[10'h1DC],
           _RANDOM[10'h1DD],
           _RANDOM[10'h1DE],
           _RANDOM[10'h1DF],
           _RANDOM[10'h1E0],
           _RANDOM[10'h1E1],
           _RANDOM[10'h1E2],
           _RANDOM[10'h1E3],
           _RANDOM[10'h1E4],
           _RANDOM[10'h1E5],
           _RANDOM[10'h1E6],
           _RANDOM[10'h1E7],
           _RANDOM[10'h1E8],
           _RANDOM[10'h1E9],
           _RANDOM[10'h1EA],
           _RANDOM[10'h1EB],
           _RANDOM[10'h1EC],
           _RANDOM[10'h1ED],
           _RANDOM[10'h1EE],
           _RANDOM[10'h1EF],
           _RANDOM[10'h1F0],
           _RANDOM[10'h1F1],
           _RANDOM[10'h1F2],
           _RANDOM[10'h1F3],
           _RANDOM[10'h1F4],
           _RANDOM[10'h1F5],
           _RANDOM[10'h1F6],
           _RANDOM[10'h1F7],
           _RANDOM[10'h1F8],
           _RANDOM[10'h1F9],
           _RANDOM[10'h1FA],
           _RANDOM[10'h1FB],
           _RANDOM[10'h1FC],
           _RANDOM[10'h1FD],
           _RANDOM[10'h1FE],
           _RANDOM[10'h1FF],
           _RANDOM[10'h200],
           _RANDOM[10'h201],
           _RANDOM[10'h202],
           _RANDOM[10'h203],
           _RANDOM[10'h204],
           _RANDOM[10'h205],
           _RANDOM[10'h206],
           _RANDOM[10'h207],
           _RANDOM[10'h208],
           _RANDOM[10'h209],
           _RANDOM[10'h20A],
           _RANDOM[10'h20B],
           _RANDOM[10'h20C],
           _RANDOM[10'h20D],
           _RANDOM[10'h20E],
           _RANDOM[10'h20F],
           _RANDOM[10'h210],
           _RANDOM[10'h211],
           _RANDOM[10'h212],
           _RANDOM[10'h213],
           _RANDOM[10'h214],
           _RANDOM[10'h215],
           _RANDOM[10'h216],
           _RANDOM[10'h217],
           _RANDOM[10'h218],
           _RANDOM[10'h219],
           _RANDOM[10'h21A],
           _RANDOM[10'h21B],
           _RANDOM[10'h21C],
           _RANDOM[10'h21D],
           _RANDOM[10'h21E],
           _RANDOM[10'h21F],
           _RANDOM[10'h220],
           _RANDOM[10'h221],
           _RANDOM[10'h222],
           _RANDOM[10'h223],
           _RANDOM[10'h224],
           _RANDOM[10'h225],
           _RANDOM[10'h226],
           _RANDOM[10'h227],
           _RANDOM[10'h228],
           _RANDOM[10'h229],
           _RANDOM[10'h22A],
           _RANDOM[10'h22B],
           _RANDOM[10'h22C],
           _RANDOM[10'h22D],
           _RANDOM[10'h22E],
           _RANDOM[10'h22F],
           _RANDOM[10'h230],
           _RANDOM[10'h231],
           _RANDOM[10'h232],
           _RANDOM[10'h233][6:0]};	// src/main/scala/tilelink/Monitor.scala:723:35, :724:35
        inflight_sizes_1 =
          {_RANDOM[10'h233][31:7],
           _RANDOM[10'h234],
           _RANDOM[10'h235],
           _RANDOM[10'h236],
           _RANDOM[10'h237],
           _RANDOM[10'h238],
           _RANDOM[10'h239],
           _RANDOM[10'h23A],
           _RANDOM[10'h23B],
           _RANDOM[10'h23C],
           _RANDOM[10'h23D],
           _RANDOM[10'h23E],
           _RANDOM[10'h23F],
           _RANDOM[10'h240],
           _RANDOM[10'h241],
           _RANDOM[10'h242],
           _RANDOM[10'h243],
           _RANDOM[10'h244],
           _RANDOM[10'h245],
           _RANDOM[10'h246],
           _RANDOM[10'h247],
           _RANDOM[10'h248],
           _RANDOM[10'h249],
           _RANDOM[10'h24A],
           _RANDOM[10'h24B],
           _RANDOM[10'h24C],
           _RANDOM[10'h24D],
           _RANDOM[10'h24E],
           _RANDOM[10'h24F],
           _RANDOM[10'h250],
           _RANDOM[10'h251],
           _RANDOM[10'h252],
           _RANDOM[10'h253],
           _RANDOM[10'h254],
           _RANDOM[10'h255],
           _RANDOM[10'h256],
           _RANDOM[10'h257],
           _RANDOM[10'h258],
           _RANDOM[10'h259],
           _RANDOM[10'h25A],
           _RANDOM[10'h25B],
           _RANDOM[10'h25C],
           _RANDOM[10'h25D],
           _RANDOM[10'h25E],
           _RANDOM[10'h25F],
           _RANDOM[10'h260],
           _RANDOM[10'h261],
           _RANDOM[10'h262],
           _RANDOM[10'h263],
           _RANDOM[10'h264],
           _RANDOM[10'h265],
           _RANDOM[10'h266],
           _RANDOM[10'h267],
           _RANDOM[10'h268],
           _RANDOM[10'h269],
           _RANDOM[10'h26A],
           _RANDOM[10'h26B],
           _RANDOM[10'h26C],
           _RANDOM[10'h26D],
           _RANDOM[10'h26E],
           _RANDOM[10'h26F],
           _RANDOM[10'h270],
           _RANDOM[10'h271],
           _RANDOM[10'h272],
           _RANDOM[10'h273],
           _RANDOM[10'h274],
           _RANDOM[10'h275],
           _RANDOM[10'h276],
           _RANDOM[10'h277],
           _RANDOM[10'h278],
           _RANDOM[10'h279],
           _RANDOM[10'h27A],
           _RANDOM[10'h27B],
           _RANDOM[10'h27C],
           _RANDOM[10'h27D],
           _RANDOM[10'h27E],
           _RANDOM[10'h27F],
           _RANDOM[10'h280],
           _RANDOM[10'h281],
           _RANDOM[10'h282],
           _RANDOM[10'h283],
           _RANDOM[10'h284],
           _RANDOM[10'h285],
           _RANDOM[10'h286],
           _RANDOM[10'h287],
           _RANDOM[10'h288],
           _RANDOM[10'h289],
           _RANDOM[10'h28A],
           _RANDOM[10'h28B],
           _RANDOM[10'h28C],
           _RANDOM[10'h28D],
           _RANDOM[10'h28E],
           _RANDOM[10'h28F],
           _RANDOM[10'h290],
           _RANDOM[10'h291],
           _RANDOM[10'h292],
           _RANDOM[10'h293],
           _RANDOM[10'h294],
           _RANDOM[10'h295],
           _RANDOM[10'h296],
           _RANDOM[10'h297],
           _RANDOM[10'h298],
           _RANDOM[10'h299],
           _RANDOM[10'h29A],
           _RANDOM[10'h29B],
           _RANDOM[10'h29C],
           _RANDOM[10'h29D],
           _RANDOM[10'h29E],
           _RANDOM[10'h29F],
           _RANDOM[10'h2A0],
           _RANDOM[10'h2A1],
           _RANDOM[10'h2A2],
           _RANDOM[10'h2A3],
           _RANDOM[10'h2A4],
           _RANDOM[10'h2A5],
           _RANDOM[10'h2A6],
           _RANDOM[10'h2A7],
           _RANDOM[10'h2A8],
           _RANDOM[10'h2A9],
           _RANDOM[10'h2AA],
           _RANDOM[10'h2AB],
           _RANDOM[10'h2AC],
           _RANDOM[10'h2AD],
           _RANDOM[10'h2AE],
           _RANDOM[10'h2AF],
           _RANDOM[10'h2B0],
           _RANDOM[10'h2B1],
           _RANDOM[10'h2B2],
           _RANDOM[10'h2B3],
           _RANDOM[10'h2B4],
           _RANDOM[10'h2B5],
           _RANDOM[10'h2B6],
           _RANDOM[10'h2B7],
           _RANDOM[10'h2B8],
           _RANDOM[10'h2B9],
           _RANDOM[10'h2BA],
           _RANDOM[10'h2BB],
           _RANDOM[10'h2BC],
           _RANDOM[10'h2BD],
           _RANDOM[10'h2BE],
           _RANDOM[10'h2BF],
           _RANDOM[10'h2C0],
           _RANDOM[10'h2C1],
           _RANDOM[10'h2C2],
           _RANDOM[10'h2C3],
           _RANDOM[10'h2C4],
           _RANDOM[10'h2C5],
           _RANDOM[10'h2C6],
           _RANDOM[10'h2C7],
           _RANDOM[10'h2C8],
           _RANDOM[10'h2C9],
           _RANDOM[10'h2CA],
           _RANDOM[10'h2CB],
           _RANDOM[10'h2CC],
           _RANDOM[10'h2CD],
           _RANDOM[10'h2CE],
           _RANDOM[10'h2CF],
           _RANDOM[10'h2D0],
           _RANDOM[10'h2D1],
           _RANDOM[10'h2D2],
           _RANDOM[10'h2D3][6:0]};	// src/main/scala/tilelink/Monitor.scala:724:35, :725:35
        d_first_counter_2 = _RANDOM[10'h2D3][8];	// src/main/scala/tilelink/Edges.scala:230:27, src/main/scala/tilelink/Monitor.scala:725:35
        watchdog_1 = {_RANDOM[10'h2D3][31:9], _RANDOM[10'h2D4][8:0]};	// src/main/scala/tilelink/Monitor.scala:725:35, :815:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  plusarg_reader #(
    .DEFAULT(0),
    .FORMAT("tilelink_timeout=%d"),
    .WIDTH(32)
  ) plusarg_reader (	// src/main/scala/util/PlusArg.scala:80:11
    .out (_plusarg_reader_out)
  );
  plusarg_reader #(
    .DEFAULT(0),
    .FORMAT("tilelink_timeout=%d"),
    .WIDTH(32)
  ) plusarg_reader_1 (	// src/main/scala/util/PlusArg.scala:80:11
    .out (_plusarg_reader_1_out)
  );
endmodule

